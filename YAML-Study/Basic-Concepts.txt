YAML is a light-weight, human-readable data-serialization language. 
It is primarily designed to make the format easy to read while including advanced features.

YAML stands for "YAML Ain't Markup Languange".

It is similar to XML and JSON files but uses a more minimalist syntax even while maintaining similar capabilities.

YAML files are created with extensions ".yaml" or ".yml". 
You can use any IDE or text editor to open/create YAML files.

JSON doesn't support comments. While YAML supports comments inside your YAML file.

YAML is easy and simple to represent complex mapping. Due to which it is heavily used in configuration settings.

** XML vs JSON vs YAML

The first data exchange format, especially in web services, was XML.
The applications could understand XML because it is language neutral.

With the invention of mobile app, people began to feel XML is heavy in nature for mobile applicaions.

That's how JSON came along and became a beloved format for web/mobile applications.

But with the advent of devops, everyone tried to find easier ways for configurations and started using YAML.

YAML is a super-set of JSON as all the features of JSON can be found in YAML.

But JSON is still favored as the data transfer format over Internet.

Since YAML is a human friendly format, it is widely used in writing configuration files 
in different DevOps tools, cloud platforms, and applications.

** The rule of thumbs in writing YAML

1) Indentation of whitespace is used to denote structure. This is similar to Python using indentation to highlight blocks of code.

2) The basic structure of YAML file is a map. You might call this a dictionary, hash or object,
depending on your favorite programming language.

3) Tabs are not included as indentation for YAML. 

4) YAML is case sensitive in nature. [name: accounts != Name: Accounts]

** Data types in YAML

1) key-value pairs
: most things in YAML are in a form of key-value pair. Key-value pairs are the basis of the YAML construction.

2) Space is mandatory between a key and a value after the colon(:).
<key>: <value>

3) YAML allows you to define your value string in double quotes("yejin"), single quotes('yejin'), and without quotes(yejin).



